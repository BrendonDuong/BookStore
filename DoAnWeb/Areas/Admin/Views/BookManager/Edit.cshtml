@model DoAnWeb.Models.Book

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Sửa Thông Tin Sách</h2>

@using (Html.BeginForm("Edit", "BookManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.BookId, new { @value = Model.BookId })
    @Html.HiddenFor(model => model.ImgUrl, new { @value = Model.ImgUrl })
    @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
    <div class="form-horizontal row">
        <div class="col-1">
        </div>
        <div class="col-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Title, "Tiêu Đề", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", value = Model.Title } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CateId, "Loại Sách", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CateId", (IEnumerable<SelectListItem>)ViewBag.Categories, htmlAttributes: new { @class = "form-control", value = Model.BookId })
                    @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AuthorId, "Tác Giả", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AuthorId", (IEnumerable<SelectListItem>)ViewBag.Authors, htmlAttributes: new { @class = "form-control", value = Model.AuthorId })
                    @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PubId, "Nhà Xuất Bản", htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.DropDownList("PubId", (IEnumerable<SelectListItem>)ViewBag.Publishers, htmlAttributes: new { @class = "form-control", value = Model.PubId })
                    @Html.ValidationMessageFor(model => model.PubId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Summary, "Tóm Tắt", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("Summary", new { htmlAttributes = new { @class = "form-control" }, @cols = "60", @rows = "7", @value = Model.Summary })
                    @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-1">
        </div>
        <div class="col-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Price, "Giá Tiền", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", value = Model.Price } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, "Số Lượng", htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", value = Model.Quantity } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, "Ngày Xuất Bản", htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CreatedDate, "{0:yyyy-MM-dd}", new { type = "date"
                                                                           ,@class = "form-control text-box single-line"})
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedDate, "Ngày Tái Bản", htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ModifiedDate, "{0:yyyy-MM-dd}", new { type = "date"
                                                                                          , @class = "form-control text-box single-line"
                                                                                          , onchange = "MinIsAnotherValue('CreatedDate','ModifiedDate','Ngày tái bản phải sau ngày sản xuất');"
                                                                                          , min="0001-02-01"})
                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.ImgUrl, "Ảnh Đại Diện", htmlAttributes: new { @class = "control-label col-md-12" })
                        <p class="col-md-10">
                            @*@Html.TextBoxFor(model=>model.ImgFile, "", new { type = "file", id = "thumnail",name= "ImgFile", onchange= "readURL(this)" })*@
                            <input type="file" id="thumnail" name="thumnail" onchange="readURL(this)" />
                        </p>
                    </div>
                    <div class="col">
                        <img id="canvasImg" style="width:129px; height:192px;" , src="~/Assest/Thumnail/@Model.ImgUrl" />
                    </div>
                </div>
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sửa" class="btn btn-default" />
            </div>
        </div>

    </div>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    @Scripts.Render("~/Scripts/Effect.js");
}
<div class="row" style="margin-bottom:30px">
    <div class="col">
        @Html.ActionLink("Về Lại Danh Sách", "Index")
    </div>
</div>

